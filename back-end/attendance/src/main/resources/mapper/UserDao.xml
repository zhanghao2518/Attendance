<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tju.cs.attendance.dao.UserDao">

    <resultMap type="tju.cs.attendance.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="did" column="did" jdbcType="INTEGER"/>
        <result property="dname" column="dname" jdbcType="VARCHAR"/>
        <result property="account" column="account" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="telephone" column="telephone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="grade" column="grade" jdbcType="INTEGER"/>
        <result property="timeRemaining" column="time_remaining" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, did, dname, account, password, name, gender, age, telephone, email, grade, time_remaining
        from attendance.user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          id, did, dname, account, password, name, gender, age, telephone, email, grade, time_remaining
        from attendance.user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserMap">
        select
        id, did, dname, account, password, name, gender, age, telephone, email, grade, time_remaining
        from attendance.user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="did != null">
                and did = #{did}
            </if>
            <if test="dname != null and dname != ''">
                and dname = #{dname}
            </if>
            <if test="account != null and account != ''">
                and account = #{account}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="telephone != null and telephone != ''">
                and telephone = #{telephone}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="grade != null">
                and grade = #{grade}
            </if>
            <if test="timeRemaining != null">
                and time_remaining = #{timeRemaining}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into attendance.user(did, dname, account, password, name, gender, age, telephone, email, grade, time_remaining)
        values (#{did}, #{dname}, #{account}, #{password}, #{name}, #{gender}, #{age}, #{telephone}, #{email}, #{grade}, #{timeRemaining})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into attendance.user(did, dname, account, password, name, gender, age, telephone, email, grade,
        time_remaining)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.did}, #{entity.dname}, #{entity.account}, #{entity.password}, #{entity.name}, #{entity.gender},
            #{entity.age}, #{entity.telephone}, #{entity.email}, #{entity.grade}, #{entity.timeRemaining})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into attendance.user(did, dname, account, password, name, gender, age, telephone, email, grade,
        time_remaining)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.did}, #{entity.dname}, #{entity.account}, #{entity.password}, #{entity.name}, #{entity.gender},
            #{entity.age}, #{entity.telephone}, #{entity.email}, #{entity.grade}, #{entity.timeRemaining})
        </foreach>
        on duplicate key update
        did = values(did) , dname = values(dname) , account = values(account) , password = values(password) , name =
        values(name) , gender = values(gender) , age = values(age) , telephone = values(telephone) , email =
        values(email) , grade = values(grade) , time_remaining = values(time_remaining)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update attendance.user
        <set>
            <if test="did != null">
                did = #{did},
            </if>
            <if test="dname != null and dname != ''">
                dname = #{dname},
            </if>
            <if test="account != null and account != ''">
                account = #{account},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="telephone != null and telephone != ''">
                telephone = #{telephone},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="grade != null">
                grade = #{grade},
            </if>
            <if test="timeRemaining != null">
                time_remaining = #{timeRemaining},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from attendance.user where id = #{id}
    </delete>

</mapper>